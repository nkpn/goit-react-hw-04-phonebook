{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/SubmitForm/SubmitForm.module.css","helpers/Toast.js","components/Container/Container.js","components/SubmitForm/SubmitForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","Hooks/localStorage.js","index.js"],"names":["module","exports","notify","name","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Container","children","className","SubmitForm","onSubmit","useState","setName","number","setNumber","id","setId","uniqeID","shortid","handleInputChange","event","target","value","reset","s","Div","Form","preventDefault","Label","htmlFor","type","Input","pattern","title","required","onChange","Button","ContactList","contacts","deleteContact","style","Contacts__container","Contact__list","map","contact","Contact__item","onClick","Filter","LabelText","propType","PropTypes","string","isRequired","func","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","newContact","console","log","find","toLowerCase","evt","normalizedFilter","includes","getVisibleContacts","data","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a14b34bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__container\":\"ContactList_Contacts__container__1gaJN\",\"Contact__list\":\"ContactList_Contact__list__pqMrK\",\"Contact__item\":\"ContactList_Contact__item__1tLgn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__QU1zh\",\"LabelText\":\"Filter_LabelText__Fza1-\",\"Input\":\"Filter_Input__1Qkbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"SubmitForm_Button__19qwr\",\"Form\":\"SubmitForm_Form__1K-sh\",\"Label\":\"SubmitForm_Label__3gw3G\",\"Input\":\"SubmitForm_Input__3Q0W-\"};","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst notify = name =>\r\n  toast.error(`${name} is already in contacts!`, {\r\n    position: 'top-right',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n\r\nexport default notify;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React, { useState } from 'react';\r\nimport s from './SubmitForm.module.css';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SubmitForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [id, setId] = useState('');\r\n  const uniqeID = shortid();\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value, id } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    setId(id);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    //* Передаем в пропс чтоб прочитать в App\r\n    onSubmit({ id, number, name });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName('');\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber('');\r\n        break;\r\n\r\n      case 'id':\r\n        setId('');\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={s.Div}>\r\n        <form className={s.Form} onSubmit={handleSubmit}>\r\n          <label className={s.Label} htmlFor={uniqeID}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={s.Input}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={handleInputChange}\r\n              id={shortid()}\r\n            />\r\n          </label>\r\n          <label className={s.Label}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              className={s.Input}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleInputChange}\r\n              value={number}\r\n              id={shortid()}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.Button}>\r\n            Add to contacts\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nSubmitForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SubmitForm;\r\n","import React from 'react';\r\nimport style from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div className={style.Contacts__container}>\r\n      <ul className={style.Contact__list}>\r\n        {contacts.map(contact => {\r\n          return (\r\n            <li key={contact.id} className={style.Contact__item}>\r\n              {contact.name} : {contact.number}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  deleteContact(contact.id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={style.Label}>\r\n      <p className={style.LabelText}>Filter:</p>{' '}\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={style.Input}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propType = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","//* Service\r\nimport React, { useState } from 'react';\r\nimport notify from 'helpers/Toast';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport '../index.css';\r\nimport useLocalStorage from 'Hooks/localStorage';\r\n//* Components\r\nimport Container from './Container';\r\nimport SubmitForm from './SubmitForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', '');\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const AddContactOnSubmit = newContact => {\r\n    console.log(contacts);\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      notify(newContact.name);\r\n      return;\r\n    }\r\n\r\n    setContacts([newContact, ...contacts]);\r\n  };\r\n\r\n  const deleteContact = data => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== data),\r\n    }));\r\n  };\r\n\r\n  const onFilter = evt => {\r\n    setFilter(evt.target.value);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <SubmitForm onSubmit={AddContactOnSubmit} />\r\n      <h1>Contacts</h1>\r\n      <Filter value={filter} onChange={onFilter} />\r\n      <ContactList\r\n        contacts={getVisibleContacts()}\r\n        deleteContact={deleteContact}\r\n      />\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}